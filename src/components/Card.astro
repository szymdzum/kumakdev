---
interface Props {
  title: string;
  description: string;
  link: string;
  imageUrl?: string;
  date?: string;
  readTime?: string;
  tags?: string[];
  price?: string;
  buttonText?: string;
}

const {
  title,
  description,
  link,
  imageUrl,
  date,
  readTime,
  tags,
  price,
  buttonText = "View details",
} = Astro.props;
---

<article class="box">
  <div class="stack">
    {
      imageUrl && (
        <figure>
          <div class="frame ratio-16:9">
            <img src={imageUrl} alt={`${title} thumbnail`} />
          </div>
          <figcaption class="sr-only">{title} image</figcaption>
        </figure>
      )
    }

    <header>
      {
        date && readTime && (
          <div class="cluster">
            <time datetime={date}>{date}</time>
            <span aria-hidden="true">â€¢</span>
            <span>{readTime}</span>
          </div>
        )
      }
      <h3>{title}</h3>
    </header>

    <p>{description}</p>

    <footer>
      {
        tags && tags.length > 0 && (
          <ul class="cluster" aria-label="Tags">
            {tags.map((tag) => (
              <li>{tag}</li>
            ))}
          </ul>
        )
      }

      {price && <p class="price">{price}</p>}

      <a href={link} class="with-icon" aria-label={`${buttonText} for ${title}`}>
        {buttonText}
      </a>
    </footer>
  </div>
</article>

<style>
  .ratio-16:9 {
    --n: 16;
    --d: 9;
  }

  h3 {
    margin: 0;
    font-size: 1.5rem;
    font-weight: 600;
    line-height: 1.25;
  }

  p {
    margin: 0;
    font-size: 0.875rem;
    line-height: 1.5;
  }

  .price {
    font-weight: 600;
  }

  footer {
    margin-top: auto;
    display: flex;
    flex-direction: column;
    gap: var(--s1);
  }

  a {
    text-decoration: none;
  }

  ul {
    list-style: none;
    padding: 0;
    margin: 0;
  }
</style>
