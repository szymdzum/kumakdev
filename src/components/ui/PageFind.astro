---
import Search from "astro-pagefind/components/Search";
---

<aside data-pagefind-ignore>
  <div
    transition:persist
    id="backdrop"
    class="bg-[rgba(0, 0, 0, 0.5] invisible fixed top-0 left-0 z-50 flex h-screen w-full justify-center p-6 backdrop-blur-xs"
  >
    <div
      id="pagefind-container"
      class="m-0 flex h-fit max-h-[80%] w-full max-w-(--breakpoint-sm) flex-col overflow-auto rounded-sm border border-black/15 bg-neutral-100 p-2 px-4 py-3 shadow-lg dark:border-white/20 dark:bg-neutral-900"
    >
      <Search
        id="search"
        className="pagefind-ui"
        uiOptions={{
          showImages: false,
          excerptLength: 15,
          resetStyles: false,
        }}
      />
      <div class="dark:prose-invert mr-2 pt-4 pb-1 text-right text-xs">
        Press <span class="prose dark:prose-invert text-xs"><kbd class="">Esc</kbd></span> or click anywhere
        to close
      </div>
    </div>
  </div>
</aside>

<script is:inline>
  // Use a self-executing function to create a closure and avoid global scope pollution
  (function () {
    // Get references to DOM elements safely
    const magnifyingGlass = document.getElementById("magnifying-glass");
    const backdrop = document.getElementById("backdrop");

    // Define functions within the closure
    function openPagefind() {
      const searchDiv = document.getElementById("search");
      if (!searchDiv) return;

      const search = searchDiv.querySelector("input");
      if (search) {
        setTimeout(() => {
          search.focus();
        }, 0);
      }

      if (backdrop) {
        backdrop.classList.remove("invisible");
        backdrop.classList.add("visible");
      }
    }

    function closePagefind() {
      const search = document.getElementById("search");
      if (search && search.value) {
        search.value = "";
      }

      if (backdrop) {
        backdrop.classList.remove("visible");
        backdrop.classList.add("invisible");
      }
    }

    // Add event listeners safely
    if (magnifyingGlass) {
      magnifyingGlass.addEventListener("click", () => {
        openPagefind();
      });
    }

    // Global keyboard shortcuts
    document.addEventListener("keydown", (e) => {
      if (e.key === "/") {
        e.preventDefault();
        openPagefind();
      } else if ((e.metaKey || e.ctrlKey) && e.key === "k") {
        e.preventDefault();
        openPagefind();
      } else if (e.key === "Escape") {
        closePagefind();
      }
    });

    // Close pagefind when search result is clicked
    document.addEventListener("click", (event) => {
      if (
        event.target &&
        event.target.classList &&
        event.target.classList.contains("pagefind-ui__result-link")
      ) {
        closePagefind();
      }
    });

    // Close pagefind when clicking outside container
    if (backdrop) {
      backdrop.addEventListener("click", (event) => {
        if (
          (event.target && !event.target.closest) ||
          !event.target.closest("#pagefind-container")
        ) {
          closePagefind();
        }
      });
    }

    // Prevent form submission
    const form = document.getElementById("form");
    if (form) {
      form.addEventListener("submit", (event) => {
        event.preventDefault();
      });
    }
  })();
</script>

<style is:global>
  :root {
    --pagefind-ui-scale: 0.75;
    --pagefind-ui-border-width: 1px;
    --pagefind-ui-border-radius: 3px;
    --pagefind-ui-font: "Geist", sans-serif;
    --pagefind-ui-primary: #3d3d3d;
    --pagefind-ui-text: #3d3d3d;
    --pagefind-ui-background: #ffffff;
    --pagefind-ui-border: #d0d0d0;
    --pagefind-ui-tag: #f5f5f5;
  }

  .dark {
    --pagefind-ui-primary: #d4d4d4;
    --pagefind-ui-text: #d4d4d4;
    --pagefind-ui-background: #171717;
    --pagefind-ui-border: #404040;
  }

  #search input {
    font-weight: normal;
  }

  #search p {
    font-weight: normal;
  }

  #search .pagefind-ui__result-title {
    font-weight: 600;
  }

  #search .pagefind-ui__message {
    padding: 0;
    padding-bottom: 0.75rem;
  }
</style>
