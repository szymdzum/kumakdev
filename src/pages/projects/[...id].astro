---
import { type CollectionEntry, getCollection, render } from "astro:content";
import FormattedDate from "@components/FormattedDate.astro";
import BackToPrevious from "@components/navigation/BackToPrevious.astro";
import Link from "@components/navigation/Link.astro";
import RootLayout from "@layouts/RootLayout.astro";
import { readingTime } from "@lib/utils";

export async function getStaticPaths() {
  const projects = (await getCollection("projects"))
    .filter((post) => !post.data.draft)
    .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());
  return projects.map((project) => ({
    params: { id: project.id },
    props: project,
  }));
}
type Props = CollectionEntry<"projects">;

const project = Astro.props;
const { Content } = await render(project);
---

<RootLayout title={project.data.title} description={project.data.description}>
  <div>
    <BackToPrevious href="/projects">Back to projects</BackToPrevious>
  </div>
  <div>
    <div>
      <div>
        <FormattedDate date={project.data.date} />
      </div>
      &bull;
      {project.body && <div>{readingTime(project.body)}</div>}
    </div>
    <h1>
      {project.data.title}
    </h1>
    {
      (project.data.demoURL || project.data.repoURL) && (
        <nav>
          {project.data.demoURL && (
            <Link href={project.data.demoURL} external>
              demo
            </Link>
          )}
          {project.data.demoURL && project.data.repoURL && <span>/</span>}
          {project.data.repoURL && (
            <Link href={project.data.repoURL} external>
              repo
            </Link>
          )}
        </nav>
      )
    }
  </div>
  <article>
    <Content />
  </article>
</RootLayout>
